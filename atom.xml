<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2020-12-16T03:42:48.583Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>如何在hexo显示图片与公式</title>
    <link href="http://example.com/2020/12/16/%E5%A6%82%E4%BD%95%E5%9C%A8hexo%E6%98%BE%E7%A4%BA%E5%9B%BE%E7%89%87%E4%B8%8E%E5%85%AC%E5%BC%8F/"/>
    <id>http://example.com/2020/12/16/%E5%A6%82%E4%BD%95%E5%9C%A8hexo%E6%98%BE%E7%A4%BA%E5%9B%BE%E7%89%87%E4%B8%8E%E5%85%AC%E5%BC%8F/</id>
    <published>2020-12-16T02:44:03.000Z</published>
    <updated>2020-12-16T03:42:48.583Z</updated>
    
    <content type="html"><![CDATA[<h1 id="显示图片"><a href="#显示图片" class="headerlink" title="显示图片"></a>显示图片</h1><h2 id="hexo配置文件修改"><a href="#hexo配置文件修改" class="headerlink" title="hexo配置文件修改"></a>hexo配置文件修改</h2><p>Hexo是一个静态的博客网站生成器，生成一个博客只需要分分钟的时间就能搞定。</p><p>Hexo的博文是支持Markdown格式的，发表一篇文章只需要简简单单的几个命令。</p><p><code>hexo new '文章'</code>就会生成一个名为’文章’的md文件。</p><p>由于我们的博客是要部署在网站上，部署后会生成新的文件目录，所以我们选择使用相对路径的方式。</p><p>在hexo中使用<strong>文章资源文件夹</strong>需要在<code>config.yaml</code>文件中更改一下配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post_asset_folder: true</span><br></pre></td></tr></table></figure><p>当该配置被应用后，使用<code>hexo new</code>命令创建新文章时，会生成相同名字的文件夹，也就是文章资源文件夹。</p><p>在source的_posts中就会生成一个md文件和一个对应名字文件夹</p><p><img src="/2020/12/16/%E5%A6%82%E4%BD%95%E5%9C%A8hexo%E6%98%BE%E7%A4%BA%E5%9B%BE%E7%89%87%E4%B8%8E%E5%85%AC%E5%BC%8F/image-20201216110542875.png" alt="image-20201216110542875"></p><h2 id="图片插件"><a href="#图片插件" class="headerlink" title="图片插件"></a><strong>图片插件</strong></h2><p>插件<a class="link" href="https://link.zhihu.com/?target=https://github.com/hexojs/hexo-renderer-marked">hexo-renderer-marked<i class="fas fa-external-link-alt"></i></a>解决了这个问题。可以只用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-marked</span><br></pre></td></tr></table></figure><p>命令直接安装，之后在<code>config.yaml</code>中更改配置如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">post_asset_folder: true</span><br><span class="line">marked:</span><br><span class="line">  prependRoot: true</span><br><span class="line">  postAsset: true</span><br></pre></td></tr></table></figure><p>之后就可以在使用<code>![](image.jpg)</code>的方式愉快的插入图片了。</p><p>我们做了这么多都是为了方便，那么为什么不再方便一点呢。</p><h1 id="hexo与Typora的完美结合"><a href="#hexo与Typora的完美结合" class="headerlink" title="hexo与Typora的完美结合"></a>hexo与Typora的完美结合</h1><p>上述是从文章资源文件夹中引用图片，前提是<strong>先将图片放入到文章资源文件夹</strong>，如果图片数量众多的话，一张一张的放很影响效率。但是不用怕，我们有很方便的解决方法。</p><h2 id="Typora安装"><a href="#Typora安装" class="headerlink" title="Typora安装"></a>Typora安装</h2><p>在这里我介绍一下ubuntu下如何安装Typora,其他系统<a class="link" href="https://typora.io/">下载<i class="fas fa-external-link-alt"></i></a>就可以直接安装</p><p>安装命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># or run:</span><br><span class="line"># sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys BA300B7755AFCFAE</span><br><span class="line">wget -qO - https://typora.io/linux/public-key.asc | sudo apt-key add -</span><br><span class="line"># add Typora's repository</span><br><span class="line">sudo add-apt-repository 'deb https://typora.io/linux ./'</span><br><span class="line">sudo apt-get update</span><br><span class="line"># install typora</span><br><span class="line">sudo apt-get install typora</span><br></pre></td></tr></table></figure><p>点击打开Typora,Ctrl+逗号，进入设置：</p><p><img src="/2020/12/16/%E5%A6%82%E4%BD%95%E5%9C%A8hexo%E6%98%BE%E7%A4%BA%E5%9B%BE%E7%89%87%E4%B8%8E%E5%85%AC%E5%BC%8F/image-20201216111453188.png" alt="image-20201216111453188"></p><p>使用该配置后，可以直接复制网页中的图片地址，粘贴到Typora中后，会直接复制该图片到文章资源文件夹，同时自动更改路径。</p><h1 id="MathJax-数学公式"><a href="#MathJax-数学公式" class="headerlink" title="MathJax 数学公式"></a>MathJax 数学公式</h1><p>在 Hexo 博客根目录下安装插件 <strong><code>hexo-filter-mathjax</code></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-filter-mathjax --save</span><br></pre></td></tr></table></figure><p>在 Hexo 配置文件 <code>_config.yml</code> 增加如下配置。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mathjax:</span><br><span class="line">  tags: none # or 'ams' or 'all'</span><br><span class="line">  single_dollars: true # enable single dollar signs as in-line math delimiters</span><br><span class="line">  cjk_width: 0.9 # relative CJK char width</span><br><span class="line">  normal_width: 0.6 # relative normal (monospace) width</span><br><span class="line">  append_css: true # add CSS to every page</span><br><span class="line">  every_page: false # if true, every page will be rendered by mathjax regardless the `mathjax` setting in Front-matter of each article</span><br></pre></td></tr></table></figure><p>在文章页添加 <code>mathjax: true</code>，至此，就可以在该页面中写公式了。<br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.602ex" xmlns="http://www.w3.org/2000/svg" width="25.757ex" height="5.018ex" role="img" focusable="false" viewbox="0 -1509.9 11384.6 2217.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mi" transform="translate(345, 0)"><path data-c="210F" d="M182 599Q182 611 174 615T133 619Q118 619 114 621T109 630Q109 636 114 656T122 681Q125 685 202 688Q272 695 286 695Q304 695 304 684Q304 682 295 644T282 597Q282 592 360 592H399Q430 592 445 587T460 563Q460 552 451 541L442 535H266L251 468Q247 453 243 436T236 409T233 399Q233 395 244 404Q295 441 357 441Q405 441 445 417T485 333Q485 284 449 178T412 58T426 44Q447 44 466 68Q485 87 500 130L509 152H531H543Q562 152 562 144Q562 128 546 93T494 23T415 -13Q385 -13 359 3T322 44Q318 52 318 77Q318 99 352 196T386 337Q386 386 346 386Q318 386 286 370Q267 361 245 338T211 292Q207 287 193 235T162 113T138 21Q128 7 122 4Q105 -12 83 -12Q66 -12 54 -2T42 26L166 530Q166 534 161 534T129 535Q127 535 122 535T112 534Q74 534 74 562Q74 570 77 576T84 585T96 589T109 591T124 592T138 592L182 595V599Z"/></g><g data-mml-node="mfrac" transform="translate(907, 0)"><g data-mml-node="mi" transform="translate(400.5, 676)"><path data-c="1D715" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"/></g><g data-mml-node="mrow" transform="translate(220, -686)"><g data-mml-node="mi"><path data-c="1D715" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"/></g><g data-mml-node="mi" transform="translate(566, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"/></g></g><rect width="1127" height="60" x="120" y="220"/></g><g data-mml-node="mi" transform="translate(2274, 0)"><path data-c="1D713" d="M161 441Q202 441 226 417T250 358Q250 338 218 252T187 127Q190 85 214 61Q235 43 257 37Q275 29 288 29H289L371 360Q455 691 456 692Q459 694 472 694Q492 694 492 687Q492 678 411 356Q329 28 329 27T335 26Q421 26 498 114T576 278Q576 302 568 319T550 343T532 361T524 384Q524 405 541 424T583 443Q602 443 618 425T634 366Q634 337 623 288T605 220Q573 125 492 57T329 -11H319L296 -104Q272 -198 272 -199Q270 -205 252 -205H239Q233 -199 233 -197Q233 -192 256 -102T279 -9Q272 -8 265 -8Q106 14 106 139Q106 174 139 264T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 299 34 333T82 404T161 441Z"/></g><g data-mml-node="mo" transform="translate(3202.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/></g><g data-mml-node="mo" transform="translate(4258.6, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"/></g><g data-mml-node="mfrac" transform="translate(5036.6, 0)"><g data-mml-node="msup" transform="translate(400.7, 676)"><g data-mml-node="mi"><path data-c="210F" d="M182 599Q182 611 174 615T133 619Q118 619 114 621T109 630Q109 636 114 656T122 681Q125 685 202 688Q272 695 286 695Q304 695 304 684Q304 682 295 644T282 597Q282 592 360 592H399Q430 592 445 587T460 563Q460 552 451 541L442 535H266L251 468Q247 453 243 436T236 409T233 399Q233 395 244 404Q295 441 357 441Q405 441 445 417T485 333Q485 284 449 178T412 58T426 44Q447 44 466 68Q485 87 500 130L509 152H531H543Q562 152 562 144Q562 128 546 93T494 23T415 -13Q385 -13 359 3T322 44Q318 52 318 77Q318 99 352 196T386 337Q386 386 346 386Q318 386 286 370Q267 361 245 338T211 292Q207 287 193 235T162 113T138 21Q128 7 122 4Q105 -12 83 -12Q66 -12 54 -2T42 26L166 530Q166 534 161 534T129 535Q127 535 122 535T112 534Q74 534 74 562Q74 570 77 576T84 585T96 589T109 591T124 592T138 592L182 595V599Z"/></g><g data-mml-node="mn" transform="translate(613.1, 363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g><g data-mml-node="mrow" transform="translate(220, -686)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g><g data-mml-node="mi" transform="translate(500, 0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"/></g></g><rect width="1578" height="60" x="120" y="220"/></g><g data-mml-node="msup" transform="translate(6854.6, 0)"><g data-mml-node="mi"><path data-c="2207" d="M46 676Q46 679 51 683H781Q786 679 786 676Q786 674 617 326T444 -26Q439 -33 416 -33T388 -26Q385 -22 216 326T46 676ZM697 596Q697 597 445 597T193 596Q195 591 319 336T445 80L697 596Z"/></g><g data-mml-node="mn" transform="translate(833, 413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g><g data-mml-node="mi" transform="translate(8091.1, 0)"><path data-c="1D713" d="M161 441Q202 441 226 417T250 358Q250 338 218 252T187 127Q190 85 214 61Q235 43 257 37Q275 29 288 29H289L371 360Q455 691 456 692Q459 694 472 694Q492 694 492 687Q492 678 411 356Q329 28 329 27T335 26Q421 26 498 114T576 278Q576 302 568 319T550 343T532 361T524 384Q524 405 541 424T583 443Q602 443 618 425T634 366Q634 337 623 288T605 220Q573 125 492 57T329 -11H319L296 -104Q272 -198 272 -199Q270 -205 252 -205H239Q233 -199 233 -197Q233 -192 256 -102T279 -9Q272 -8 265 -8Q106 14 106 139Q106 174 139 264T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 299 34 333T82 404T161 441Z"/></g><g data-mml-node="mo" transform="translate(8964.3, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"/></g><g data-mml-node="mi" transform="translate(9964.6, 0)"><path data-c="1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"/></g><g data-mml-node="mi" transform="translate(10733.6, 0)"><path data-c="1D713" d="M161 441Q202 441 226 417T250 358Q250 338 218 252T187 127Q190 85 214 61Q235 43 257 37Q275 29 288 29H289L371 360Q455 691 456 692Q459 694 472 694Q492 694 492 687Q492 678 411 356Q329 28 329 27T335 26Q421 26 498 114T576 278Q576 302 568 319T550 343T532 361T524 384Q524 405 541 424T583 443Q602 443 618 425T634 366Q634 337 623 288T605 220Q573 125 492 57T329 -11H319L296 -104Q272 -198 272 -199Q270 -205 252 -205H239Q233 -199 233 -197Q233 -192 256 -102T279 -9Q272 -8 265 -8Q106 14 106 139Q106 174 139 264T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 299 34 333T82 404T161 441Z"/></g></g></g></svg></mjx-container></p><h2 id="推荐几个公式识别"><a href="#推荐几个公式识别" class="headerlink" title="推荐几个公式识别"></a>推荐几个公式识别</h2><ol><li>OCR 公式识别</li></ol><p>这里我推荐一个软件叫做 <a class="link" href="https://mathpix.com/">Mathpix<i class="fas fa-external-link-alt"></i></a>。<a class="link" href="https://mathpix.com/">Mathpix<i class="fas fa-external-link-alt"></i></a> 的强大之处就在于，它可以利用 OCR 技术将一个图片形式的 LaTeX 公式还原为 LaTeX 源代码，这样我们就可以直接复制 LaTeX 源代码到我们自己的论文之中，再也不需要截一个 PDF 中模糊的公式图片了。</p><p><img src="/2020/12/16/%E5%A6%82%E4%BD%95%E5%9C%A8hexo%E6%98%BE%E7%A4%BA%E5%9B%BE%E7%89%87%E4%B8%8E%E5%85%AC%E5%BC%8F/image-20201216113803421.png" alt="image-20201216113803421"></p><p>在ubuntu中安装也很简单</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo snap install mathpix-snipping-tool</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;显示图片&quot;&gt;&lt;a href=&quot;#显示图片&quot; class=&quot;headerlink&quot; title=&quot;显示图片&quot;&gt;&lt;/a&gt;显示图片&lt;/h1&gt;&lt;h2 id=&quot;hexo配置文件修改&quot;&gt;&lt;a href=&quot;#hexo配置文件修改&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    
    <category term="hexo typora" scheme="http://example.com/tags/hexo-typora/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu16.04在github上搭建hexo</title>
    <link href="http://example.com/2020/12/15/ubuntu16-04%E5%9C%A8github%E4%B8%8A%E6%90%AD%E5%BB%BAhexo/"/>
    <id>http://example.com/2020/12/15/ubuntu16-04%E5%9C%A8github%E4%B8%8A%E6%90%AD%E5%BB%BAhexo/</id>
    <published>2020-12-15T10:08:07.000Z</published>
    <updated>2020-12-16T09:40:50.471Z</updated>
    
    <content type="html"><![CDATA[<p>Hexo是一个基于Node.js的静态博客程序，可以方便的生成静态网页托管在github、gitcafe和Heroku上。博客存放的不只是文章内容，还有文章列表、分类、标签、翻页等动态内容，hexo所做的就是将这些md文件都放在本地，更新博文目录和相关链接信息，每次写完文章后调用写好的命令来批量完成相关页面的生成，然后再将有改动的页面提交到github。</p><p>Hexo依赖Node.js和Git。nvm（node version manager）是nodejs版本管理工具，管理nodejs和npm的版本；npm是随同nodeJs一起安装的包管理工具，npm管理对应nodeJs的第三方插件；nvm管理构建nodejs和对应的npm，npm管理对应的nodejs的第三方插件。</p><h1 id="本地安装"><a href="#本地安装" class="headerlink" title="本地安装"></a>本地安装</h1><h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install git-core</span><br></pre></td></tr></table></figure><h2 id="ubuntu-安装-node"><a href="#ubuntu-安装-node" class="headerlink" title="ubuntu 安装 node"></a>ubuntu 安装 node</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update -y</span><br><span class="line">sudo apt install -y nodejs nodejs-legacy npm</span><br><span class="line">sudo npm config set registry https://registry.npm.taobao.org</span><br><span class="line">sudo npm install n -g</span><br><span class="line">sudo n stable  # 安装最新版本</span><br></pre></td></tr></table></figure><p>补充一下 n 是一个Node工具包，它提供了几个升级命令参数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">n            显示已安装的Node版本</span><br><span class="line">n latest     安装最新版本Node</span><br><span class="line">n stable     安装最新稳定版Node</span><br><span class="line">n lts        安装最新长期维护版(lts)Node</span><br><span class="line">n &lt;version&gt;  根据提供的版本号安装Node&lt;/pre&gt;</span><br></pre></td></tr></table></figure><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h2 id="初始化Hexo"><a href="#初始化Hexo" class="headerlink" title="初始化Hexo"></a>初始化Hexo</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init hexo   #自定义的文件夹</span><br><span class="line">cd hexo</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><h2 id="设置Hexo"><a href="#设置Hexo" class="headerlink" title="设置Hexo"></a>设置Hexo</h2><p>执行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g/generate  #生成静态网页</span><br><span class="line">hexo s/server    #运行本地服务器</span><br></pre></td></tr></table></figure><p>如果出现提示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure><p>说明安装成功，在浏览器地址栏输入<a class="link" href="http://localhost:4000/">http://localhost:4000<i class="fas fa-external-link-alt"></i></a> 就可以看到默认主题的博客界面了。</p><h2 id="博客主题更改"><a href="#博客主题更改" class="headerlink" title="博客主题更改"></a>博客主题更改</h2><h3 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h3><p>可以访问这个<a class="link" href="https://hexo.io/themes/">地址<i class="fas fa-external-link-alt"></i></a>下载主题</p><p>比如：我这个<a class="link" href="https://xpoet.cn/">主题<i class="fas fa-external-link-alt"></i></a>，点进去之后。找到github地址就可以clone到本地</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone --depth=1 git@github.com:XPoet/hexo-theme-keep.git themes/keep</span><br></pre></td></tr></table></figure><p>你也可以选择你喜欢的主题，再将他clone下来</p><p>更新主题，修改hexo目录下的<code>_config.yml</code>，将<code>theme</code>属性设置为keep，也就是那个下载下来的文件名，默认是landscape。</p><p>执行命令查看本地效果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>到此为止已经完成了Hexo博客的本地安装和查看，下一步是将博客部署到github上面，这样就可以通过网络远程访问自己的博客了。</p><p>keep主题优化推荐文章：<a class="link" href="https://ils.xpoet.cn/categories/">https://ils.xpoet.cn/categories/<i class="fas fa-external-link-alt"></i></a></p><h1 id="部署到github"><a href="#部署到github" class="headerlink" title="部署到github"></a><strong>部署到github</strong></h1><ul><li>首先到github上面注册自己的账号。</li><li>配置github</li></ul><p>命令行输入命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name "username" #github用户名</span><br><span class="line">git config --global user.eamil "email@example.com" #github邮箱帐号，登录用的邮箱</span><br></pre></td></tr></table></figure><p>创建公钥，命令行输入命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -C 'you email address@gmail.com' -t rsa</span><br></pre></td></tr></table></figure><p><strong>说明：C必须大写，改为自己的注册邮箱，然后一直回车，直到出现<code>“The key’s randomart image is：”</code>的提示。</strong></p><p>之后用户目录<code>~/.ssh/</code>下建立了相应的密钥文件<code>id_rsa.pub</code>，打开该文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gedit ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><h2 id="添加公钥"><a href="#添加公钥" class="headerlink" title="添加公钥"></a>添加公钥</h2><ul><li><p>添加公钥：github首页右上角点击头像，选择<code>Settings</code>，再选择<code>New SSH KEY</code>，把上一步<code>id_rsa.pub</code>文件的秘钥复制进去生成公钥。<img src="/2020/12/15/ubuntu16-04%E5%9C%A8github%E4%B8%8A%E6%90%AD%E5%BB%BAhexo/title-key.png" alt="img"></p><p>输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>出现如下成功！</p><p><img src="/2020/12/15/ubuntu16-04%E5%9C%A8github%E4%B8%8A%E6%90%AD%E5%BB%BAhexo/check.png" alt="img"></p></li><li><p>创建项目仓库：github首页点击右上角的<code>+</code>，选择<code>New repository</code>。在页面里输入<code>username.github.io</code>，必须这么写。填完后点击<code>Create repository</code>。</p><p><img src="/2020/12/15/ubuntu16-04%E5%9C%A8github%E4%B8%8A%E6%90%AD%E5%BB%BAhexo/new-repo.png" alt="img"></p></li><li><p>部署博客：修改hexo目录下的<code>_config.yml</code>文件，最后面修改为：</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:username/username.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>安装hexo的插件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy #可以使用hexo g -d命令代替上面两个命令</span><br></pre></td></tr></table></figure><p>在浏览器输入<code>yourname.github.io</code>就可以访问的自己的博客啦</p><h2 id="有可能出现的情况"><a href="#有可能出现的情况" class="headerlink" title="有可能出现的情况"></a>有可能出现的情况</h2><h3 id="出现上传成功，但是不显示页面"><a href="#出现上传成功，但是不显示页面" class="headerlink" title="出现上传成功，但是不显示页面"></a>出现上传成功，但是不显示页面</h3><p>这时候需要去到项目中，可以看到。提示你建立一个readme.md文件，点击他，就可以了。</p><h1 id="绑定自己的域名"><a href="#绑定自己的域名" class="headerlink" title="绑定自己的域名"></a>绑定自己的域名</h1><h2 id="阿里云方面"><a href="#阿里云方面" class="headerlink" title="阿里云方面"></a>阿里云方面</h2><p>我这边是在阿里云买的一个域名，<a href>liaokai.com.cn</a> 当然也可以选一些top等比较便宜的域名，根据个人情况而定，购买完成之后需要进行邮箱验证和实名认证。</p><p>等待实名认证通过后跳转到域名管理中，点击解析按钮再点击添加记录</p><p>通过ping 自己github.io可以得知ip地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping kyle-liao.github.io</span><br></pre></td></tr></table></figure><p><img src="/2020/12/15/ubuntu16-04%E5%9C%A8github%E4%B8%8A%E6%90%AD%E5%BB%BAhexo/image-20201216160634384.png" alt="image-20201216160634384"></p><p>添加记录以上两条就可以了</p><h2 id="github设置"><a href="#github设置" class="headerlink" title="github设置"></a>github设置</h2><p>去到保存kyle-liao.github.io这个项目中，点击settings</p><img src="/2020/12/15/ubuntu16-04%E5%9C%A8github%E4%B8%8A%E6%90%AD%E5%BB%BAhexo/微信图片_20201216161115.png" alt="微信图片_20201216161115" style="zoom:75%;"><p>添加自己的域名即可。</p><h1 id><a href="#" class="headerlink" title></a></h1><h1 id="本文转载摘要"><a href="#本文转载摘要" class="headerlink" title="本文转载摘要"></a>本文转载摘要</h1><ol><li><a class="link" href="http://ttshun.com/2018/03/21/ubuntu16.04">http://ttshun.com/2018/03/21/ubuntu16.04<i class="fas fa-external-link-alt"></i></a> Hexo+github+Typora搭建博客</li><li><a class="link" href="https://blog.csdn.net/u010996565/article/details/90680026">https://blog.csdn.net/u010996565/article/details/90680026<i class="fas fa-external-link-alt"></i></a> 【Hexo】Hexo个人博客绑定域名</li><li></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Hexo是一个基于Node.js的静态博客程序，可以方便的生成静态网页托管在github、gitcafe和Heroku上。博客存放的不只是文章内容，还有文章列表、分类、标签、翻页等动态内容，hexo所做的就是将这些md文件都放在本地，更新博文目录和相关链接信息，每次写完文章</summary>
      
    
    
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    
    <category term="hexo github" scheme="http://example.com/tags/hexo-github/"/>
    
  </entry>
  
</feed>
